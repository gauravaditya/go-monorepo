{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/events/produce": {
            "post": {
                "description": "Parses the incoming request body as an event, marshals it to JSON, and produces the event message.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Produce an event",
                "parameters": [
                    {
                        "description": "Event payload",
                        "name": "event",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Event"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event produced",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid payload",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Failed to marshal event or produce event",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.Event": {
            "type": "object",
            "properties": {
                "consumed": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        }
    }
}